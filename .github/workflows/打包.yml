name: EZ-Clean-Auto-Manual-Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    permissions:
      actions: write
      contents: write
    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 安装Go环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      # 新增：打包前创建英文目录
      - name: 创建产物存放目录（英文）
        run: |
          cd $GITHUB_WORKSPACE
          mkdir -p ez-basic ez-full
          echo "产物目录创建完成：ez-basic/、ez-full/"

      # 新增：编译并验证产物存在
      - name: 编译Go文件（验证产物）
        run: |
          cd $GITHUB_WORKSPACE/源码
          go build -o ../ez-basic/EZ main.go
          go build -o ../ez-full/EZ ez.go
          # 验证产物存在（不存在则报错）
          if [ ! -f "../ez-basic/EZ" ] || [ ! -f "../ez-full/EZ" ]; then
            echo "编译失败：产物文件缺失"
            exit 1
          fi
          echo "编译完成并验证通过"

      # 新增：打包后强制验证压缩包存在
      - name: 打包双版本压缩包（验证发布文件）
        run: |
          cd $GITHUB_WORKSPACE
          # 基础版打包
          cp ez-basic/EZ ./EZ
          zip -r EZ-Clean-Basic.zip . -x ".git/*" ".github/*" "node_modules/*" "源码/*" "ez-basic/*" "ez-full/*"
          rm ./EZ
          # 完整版打包
          cp ez-full/EZ ./EZ
          zip -r EZ-Clean-Full.zip . -x ".git/*" ".github/*" "node_modules/*" "源码/*" "ez-basic/*" "ez-full/*"
          rm ./EZ
          # 验证压缩包存在（不存在则报错）
          if [ ! -f "EZ-Clean-Basic.zip" ] || [ ! -f "EZ-Clean-Full.zip" ]; then
            echo "打包失败：压缩包文件缺失"
            exit 1
          fi
          echo "打包完成并验证通过"

      # 新增：发布前文件存在性检查（严格验证）
      - name: 检查发布文件是否存在
        uses: andstor/file-existence-action@v3
        with:
          files: |
            ${{ github.workspace }}/EZ-Clean-Basic.zip
            ${{ github.workspace }}/EZ-Clean-Full.zip
            ${{ github.workspace }}/RELEASE_NOTES.md
          fail: true  # 缺失文件则终止流程

      # 新增：生成Release说明文档（带校验和）
      - name: 生成Release说明文档（含校验和）
        run: |
          echo "## EZ-Clean Release Notes
          - **Release Type**: ${{ github.event_name == 'push' && 'Auto' || 'Manual' }}
          - **Release Time**: $(date +'%Y-%m-%d %H:%M:%S')
          - **Checksums**:
            - EZ-Clean-Basic.zip: $(sha256sum EZ-Clean-Basic.zip | awk '{print $1}')
            - EZ-Clean-Full.zip: $(sha256sum EZ-Clean-Full.zip | awk '{print $1}')" > RELEASE_NOTES.md
          echo "Release notes generated with checksums"

      # 优化：彻底删除旧Release（使用专业工具）
      - name: 删除旧Release（保留最新3个）
        uses: sgpublic/delete-release-action@v1.1
        with:
          repo: ${{ github.repository }}
          release-drop: true
          release-drop-count: 3  # 保留最新3个Release
          release-drop-tag: true
          token: ${{ secrets.GITHUB_TOKEN }}

      # 优化：发布新版本（带重试机制）
      - name: 发布Release（带重试）
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "module"
          name: "EZ-Clean-Dual-Version"
          body_path: RELEASE_NOTES.md
          draft: false
          prerelease: false
          overwrite_files: true
          files: |
            ${{ github.workspace }}/EZ-Clean-Basic.zip
            ${{ github.workspace }}/EZ-Clean-Full.zip
        # 新增：失败后重试一次
        if: failure()
        run: |
          echo "发布失败，正在重试..."
          sleep 10
          gh release upload module EZ-Clean-Basic.zip EZ-Clean-Full.zip --clobber

  # 优化：智能清理工作流记录
  workflow-cleanup:
    runs-on: ubuntu-latest
    needs: build-and-release
    permissions:
      actions: write
    steps:
      - name: 清理旧工作流记录（保留最新10条）
        uses: matt-rakes/delete-workflow-runs@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: ${{ github.repository }}
          retain_days: 0
          retain_runs: 0  # 保留最新10条记录
          delete_workflow_by_state_pattern: 'completed'
          delete_run_by_conclusion_pattern: 'success,failure'
          dry_run: false
