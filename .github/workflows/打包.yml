name: EZ-Clean-Auto-Manual-Release

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    steps:
      - name: 拉取仓库代码
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 配置Git全局身份
        run: |
          git config --global user.name "${{ github.actor }}"
          git config --global user.email "${{ github.actor }}@users.noreply.github.com"
          echo "Git身份配置完成"

      - name: 安装Go环境
        uses: actions/setup-go@v5
        with:
          go-version: '1.22.x'

      # 编译两个Go文件，分别输出到根目录
      - name: 编译Go文件（main.go→EZ-普通版，ez.go→EZ-多功能版）
        run: |
          cd $GITHUB_WORKSPACE/源码
          go build -o ../EZ-普通版 main.go   # main.go编译为"EZ-普通版"
          go build -o ../EZ-多功能版 ez.go  # ez.go编译为"EZ-多功能版"
          echo "编译完成：根目录已生成EZ-普通版、EZ-多功能版"

      - name: 创建/覆盖module标签
        run: |
          FIXED_TAG="module"
          TRIGGER_TYPE=$([ "${{ github.event_name }}" == "push" ] && echo "自动触发" || echo "手动触发")
          git tag -d $FIXED_TAG 2>/dev/null || true
          git push origin --delete $FIXED_TAG 2>/dev/null || true
          git tag -a $FIXED_TAG -m "EZ-Clean-$TRIGGER_TYPE（时间：$(date +'%Y-%m-%d %H:%M:%S')）"
          git push origin $FIXED_TAG --force
          echo "标签 $FIXED_TAG 已更新"

      # 打包双压缩包：普通版（含EZ-普通版）、多功能版（含EZ-多功能版）
      - name: 打包双版本压缩包（跳过源码文件夹）
        run: |
          cd $GITHUB_WORKSPACE
          # 普通版压缩包：仅包含"EZ-普通版"及其他非编译文件
          zip -r EZ-Clean-普通版.zip . -x ".git/*" ".github/*" "node_modules/*" "源码/*" "EZ-多功能版"
          # 多功能版压缩包：仅包含"EZ-多功能版"及其他非编译文件
          zip -r EZ-Clean-多功能版.zip . -x ".git/*" ".github/*" "node_modules/*" "源码/*" "EZ-普通版"
          echo "双压缩包打包完成：EZ-Clean-普通版.zip、EZ-Clean-多功能版.zip"

      # 生成动态发布说明（包含版本信息、文件说明）
      - name: 生成Release说明文档
        run: |
          echo "## EZ-Clean 发布说明
          - **发布类型**：${{ github.event_name == 'push' && 'main分支自动发布' || '手动触发发布' }}
          - **发布时间**：$(date +'%Y-%m-%d %H:%M:%S')
          - **标签版本**：module（固定标签，每次发布覆盖更新）
          
          ### 压缩包说明
          1. **EZ-Clean-普通版.zip**：包含`EZ-普通版`（由/源码/main.go编译），提供基础核心功能
          2. **EZ-Clean-多功能版.zip**：包含`EZ-多功能版`（由/源码/ez.go编译），提供扩展功能
          
          ### 注意事项
          - 两个压缩包均已排除源码文件夹及Git相关文件，可直接使用
          - 若需查看源码，请从仓库主分支获取" > RELEASE_NOTES.md
          echo "Release说明文档生成完成"

      - name: 创建/更新GitHub Release（含双压缩包+发布说明）
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        id: create_release
        with:
          tag_name: "module"
          release_name: EZ-Clean-双版本发布（$(date +'%Y%m%d')）
          body_path: RELEASE_NOTES.md  # 引入动态生成的发布说明
          draft: false
          prerelease: false
          overwrite: true

      # 上传普通版压缩包
      - name: 上传普通版压缩包到Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/EZ-Clean-普通版.zip
          asset_name: EZ-Clean-普通版.zip
          asset_content_type: application/zip
          overwrite: true

      # 上传多功能版压缩包
      - name: 上传多功能版压缩包到Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ github.workspace }}/EZ-Clean-多功能版.zip
          asset_name: EZ-Clean-多功能版.zip
          asset_content_type: application/zip
          overwrite: true
